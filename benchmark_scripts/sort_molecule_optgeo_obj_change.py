"""
Sort the molecules by the change of objective from optimized geometries
"""

import numpy as np
from sort_molecule_optgeo_obj import read_pickle_data, aggregate_rmse_data


def sort_print_obj_change_table(orig_molecule_obj_dict, new_molecule_obj_dict):
    molecule_obj_change_dict = {m: new_molecule_obj_dict[m]-orig_molecule_obj_dict[m] for m in orig_molecule_obj_dict}
    sorted_molecules = sorted(orig_molecule_obj_dict, key=lambda x: molecule_obj_change_dict[x])
    print("Results")
    print(f"idx       {'filename':^100s} delta_obj")
    print('-'*120)
    for i, mol2_fnm in enumerate(sorted_molecules):
        obj = molecule_obj_change_dict[mol2_fnm]
        print(f'{i:<7}   {mol2_fnm:100s} {obj:9.5f}')

def main():
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('orig_optgeo_pickle_file', help='pickled data generated by plot_optgeo_each_smirks.py for orig ff')
    parser.add_argument('new_optgeo_pickle_file', help='pickled data generated by plot_optgeo_each_smirks.py for new ff')
    args = parser.parse_args()

    orig_optgeo_data = read_pickle_data(args.orig_optgeo_pickle_file)
    orig_molecule_obj_dict = aggregate_rmse_data(orig_optgeo_data)

    new_optgeo_data = read_pickle_data(args.new_optgeo_pickle_file)
    new_molecule_obj_dict = aggregate_rmse_data(new_optgeo_data)

    sort_print_obj_change_table(orig_molecule_obj_dict, new_molecule_obj_dict)

if __name__ == "__main__":
    main()